{"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/2775", "repository_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT", "labels_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/2775/labels{/name}", "comments_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/2775/comments", "events_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/2775/events", "html_url": "https://github.com/Significant-Gravitas/Auto-GPT/issues/2775", "id": 1677865818, "node_id": "I_kwDOJKSTjM5kAjNa", "number": 2775, "title": "Adding support for other programming languages", "user": {"login": "mwos-xebia", "id": 125279815, "node_id": "U_kgDOB3eeRw", "avatar_url": "https://avatars.githubusercontent.com/u/125279815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwos-xebia", "html_url": "https://github.com/mwos-xebia", "followers_url": "https://api.github.com/users/mwos-xebia/followers", "following_url": "https://api.github.com/users/mwos-xebia/following{/other_user}", "gists_url": "https://api.github.com/users/mwos-xebia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwos-xebia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwos-xebia/subscriptions", "organizations_url": "https://api.github.com/users/mwos-xebia/orgs", "repos_url": "https://api.github.com/users/mwos-xebia/repos", "events_url": "https://api.github.com/users/mwos-xebia/events{/privacy}", "received_events_url": "https://api.github.com/users/mwos-xebia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5380076298, "node_id": "LA_kwDOJKSTjM8AAAABQK1zCg", "url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/labels/AI%20model%20limitation", "name": "AI model limitation", "color": "c5def5", "default": false, "description": "Not related to AutoGPT directly."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-21T05:57:23Z", "updated_at": "2023-04-21T11:47:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Duplicates\n\n- [X] I have searched the existing issues\n\n### Summary \ud83d\udca1\n\nI have tried asking Agent-GPT to write a simple test in PHP (and in several other languages, different from Python) and every time the application creates its codes in *.py files and only empty comment files. \r\n\r\nFor example - if I ask Auto-GPT to create a PHP script to do some simple thing, I would like to receive a *.php file in workspace with the content with the expected code. At the moment it looks more or less like this: \r\n```\r\n<?php\r\n\r\n// Code for the DES-HyperNEAT algorithm implementation goes here\r\n\r\n?>\r\n\r\n<?php\r\n\r\n// This is a sample implementation of the DES-HyperNEAT algorithm in PHP\r\n\r\n?>\r\n\r\n<?php\r\n\r\n// Start writing the code for the DES-HyperNEAT algorithm implementation here\r\n\r\n?>\r\n\r\n<?php\r\n\r\n// PoC code for DES-HyperNEAT algorithm in PHP\r\n\r\n?>\r\n```\r\n\r\nThe best one:\r\n```\r\nimport unittest\r\n\r\nclass TestMyCode(unittest.TestCase):\r\n    def test_addition(self):\r\n        self.assertEqual(1 + 1, 2)\r\n\r\n    def test_subtraction(self):\r\n        self.assertEqual(5 - 3, 2)\r\n\r\n    def test_multiplication(self):\r\n        self.assertEqual(2 * 3, 6)\r\n\r\n    def test_division(self):\r\n        self.assertEqual(10 / 2, 5)\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n<?php\r\n\r\nclass DesHyperNEATTests extends PHPUnit_Framework_TestCase\r\n{\r\n    public function testExample()\r\n    {\r\n        $this->assertTrue(true);\r\n    }\r\n}\r\n<?php\\n\\n// Tests for the DES-HyperNEAT algorithm implementation go here\\n\\n?>\r\n```\r\nFor this script, despite being asked to create a working script in PHP, he created himself a working script in Python, despite my forbidding him to compile code in that language: \r\n```\r\nimport unittest\r\nfrom des_hyperneat import DESHyperNEAT\r\n\r\nclass DESHyperNEATTest(unittest.TestCase):\r\n    def test_initialization(self):\r\n        des = DESHyperNEAT()\r\n        self.assertIsInstance(des, DESHyperNEAT)\r\n\r\n    def test_generate_cppn(self):\r\n        des = DESHyperNEAT()\r\n        cppn = des.generate_cppn()\r\n        self.assertIsInstance(cppn, CPPN)\r\n\r\n    def test_generate_network(self):\r\n        des = DESHyperNEAT()\r\n        cppn = des.generate_cppn()\r\n        network = des.generate_network(cppn)\r\n        self.assertIsInstance(network, Network)\r\n\r\n    def test_evaluate_network(self):\r\n        des = DESHyperNEAT()\r\n        cppn = des.generate_cppn()\r\n        network = des.generate_network(cppn)\r\n        input = [1, 2, 3, 4, 5]\r\n        output = des.evaluate_network(network, input)\r\n        self.assertIsNotNone(output)\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n\r\nAfter which he assessed that the job was done and the work could be finished :) \n\n### Examples \ud83c\udf08\n\nI do not have links to implementation\n\n### Motivation \ud83d\udd26\n\nI would like this tool to be 'multipurpose'. Don't let it close only to the needs of people associated with one programming language. I suspect that people writing in Go, Java or other languages have similar problems. ", "reactions": {"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/2775/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/2775/timeline", "performed_via_github_app": null, "state_reason": null}