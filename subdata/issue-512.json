{"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1166", "repository_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT", "labels_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1166/labels{/name}", "comments_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1166/comments", "events_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1166/events", "html_url": "https://github.com/Significant-Gravitas/Auto-GPT/issues/1166", "id": 1666949243, "node_id": "I_kwDOJKSTjM5jW6B7", "number": 1166, "title": "SudoLang makes better prompts", "user": {"login": "isaaclepes", "id": 54421422, "node_id": "MDQ6VXNlcjU0NDIxNDIy", "avatar_url": "https://avatars.githubusercontent.com/u/54421422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaaclepes", "html_url": "https://github.com/isaaclepes", "followers_url": "https://api.github.com/users/isaaclepes/followers", "following_url": "https://api.github.com/users/isaaclepes/following{/other_user}", "gists_url": "https://api.github.com/users/isaaclepes/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaaclepes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaaclepes/subscriptions", "organizations_url": "https://api.github.com/users/isaaclepes/orgs", "repos_url": "https://api.github.com/users/isaaclepes/repos", "events_url": "https://api.github.com/users/isaaclepes/events{/privacy}", "received_events_url": "https://api.github.com/users/isaaclepes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5272676243, "node_id": "LA_kwDOJKSTjM8AAAABOkankw", "url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 5381931159, "node_id": "LA_kwDOJKSTjM8AAAABQMnAlw", "url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/labels/needs%20discussion", "name": "needs discussion", "color": "0e8a16", "default": false, "description": "To be discussed among maintainers"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-13T18:42:08Z", "updated_at": "2023-04-18T04:10:41Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Duplicates\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Summary \ud83d\udca1\r\n\r\nSudoLang (https://github.com/paralleldrive/sudolang-llm-support/) is really good for keeping an LLM operating as expected.\r\nI am fairly new to it, but I have managed to get better results using GPT-3.5 by modifying the prompt.txt\r\n\r\nThis could use some refining, but as-is it shows a marked improvement in GPT-3.5 only mode.  GPT-4 is even better at following SudoLang.  Note: I was having issues with the 'google' command, so I modified it to 'web_search' and updated the python as well.  This appears more reliable.\r\n\r\n### Examples \ud83c\udf08\r\n\r\n_commands {\r\n    \"web_search\", args: \"input\": \"<search>\";\r\n    \"browse_website\", args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\";\r\n    \"start_agent\", args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\";\r\n    \"message_agent\", args: \"key\": \"<key>\", \"message\": \"<message>\";\r\n    \"list_agents\", args: \"\";\r\n    \"delete_agent\", args: \"key\": \"<key>\";\r\n    \"write_to_file\", args: \"file\": \"<file>\", \"text\": \"<text>\";\r\n    \"read_file\", args: \"file\": \"<file>\";\r\n    \"append_to_file\", args: \"file\": \"<file>\", \"text\": \"<text>\";\r\n    \"delete_file\", args: \"file\": \"<file>\";\r\n    \"search_files\", args: \"directory\": \"<directory>\";\r\n    \"evaluate_code\", args: \"code\": \"<full_code_string>\";\r\n    \"improve_code\", args: \"suggestions\": \"<list_of_suggestions>\", \"code\": \"<full_code_string>\";\r\n    \"write_tests\", args: \"code\": \"<full_code_string>\", \"focus\": \"<list_of_focus_areas>\";\r\n    \"execute_python_file\", args: \"file\": \"<file>\";\r\n    \"task_complete\", args: \"reason\": \"<reason>\";\r\n    \"generate_image\", args: \"prompt\": \"<prompt>\";\r\n    \"do_nothing\", args: \"\";\r\n}\r\n\r\nresources {\r\n  Internet access for searches and information gathering.\r\n  Long Term memory management.\r\n  GPT-3.5 Agents for delegation of simple tasks.\r\n  File read-write.\r\n}\r\n\r\nconstraints {\r\n    4000 word limit for short term memory, immediately save important information to files\r\n    Solve tasks without user assistance.\r\n    If you are unsure how you previously did something or want to recall past events, thinking about similar events will help you remember.\r\n    Exclusively use the commands available.\r\n    Output must use response format with all thought types completed.\r\n    Always include command in response.\r\n    File access in working directory only.\r\n    Raw JSON output only without additional comments.\r\n}\r\n\r\nperformance_evaluation {\r\n  Continuously review and analyze your actions to ensure you are performing to the best of your abilities.\r\n  Constructively self-criticize your big-picture behavior constantly.\r\n  Reflect on past decisions and strategies to refine your approach.\r\n  Every command has a cost, so be smart and efficient. Aim to complete tasks in the least number of steps.\r\n}\r\n\r\nfunction app() {\r\n    check_for_errors()\r\n    adapt_to_overcome_error()\r\n    detect_and_store_memory()\r\n    analyze_goals()\r\n    generate_plan()\r\n    create_self_criticism()\r\n    apply_constraints()\r\n    output_response()\r\n}\r\n\r\nfunction check_for_errors() {\r\n    // Check for error messages in message\r\n}\r\n\r\nfunction adapt_to_overcome_error() {\r\n    // If error found, adapt to overcome error\r\n}\r\n\r\nfunction detect_and_store_memory() {\r\n    // if \"reminds you of these events\" is detected, store entire string as $memory\r\n}\r\n\r\nfunction analyze_goals() {\r\n    // Analyze goals\r\n}\r\n\r\nfunction generate_plan() {\r\n    // Using $thoughts and $memory, generate $plan to fulfil $goals through $commands and $resources\r\n}\r\n\r\nfunction create_self_criticism() {\r\n    // Using performance_evaluation parameters, create constructive self-criticism for plan and store in $criticism\r\n}\r\n\r\nfunction apply_constraints() {\r\n    // Apply constraints from $constraints\r\n}\r\n\r\nfunction output_response() {\r\n    // Exclusively output using output_format in JSON\r\n}\r\n\r\noutput_format {\r\n    \"thoughts\": {\r\n        \"text\": \"thought\",\r\n        \"reasoning\": \"reasoning\",\r\n        \"plan\": \"- short bulleted\\n- list that conveys\\n- long-term plan\",\r\n        \"criticism\": \"constructive self-criticism\",\r\n        \"speak\": \"thoughts summary to text-to-speech to user\"\r\n    },\r\n    \"command\": {\r\n        \"name\": \"command name\",\r\n        \"args\": {\r\n            \"arg name\": \"value\"\r\n        }\r\n    }\r\n}\r\n\r\nrun(app)_\r\n\r\n### Motivation \ud83d\udd26\r\n\r\nI enjoy prompt engineering and this project fascinates me.", "reactions": {"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1166/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1166/timeline", "performed_via_github_app": null, "state_reason": null}