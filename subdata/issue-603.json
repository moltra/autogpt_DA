{"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/286", "repository_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT", "labels_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/286/comments", "events_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/286/events", "html_url": "https://github.com/Significant-Gravitas/Auto-GPT/issues/286", "id": 1656537167, "node_id": "I_kwDOJKSTjM5ivMBP", "number": 286, "title": "Executing python code directly from AI output", "user": {"login": "luiz00martins", "id": 43142209, "node_id": "MDQ6VXNlcjQzMTQyMjA5", "avatar_url": "https://avatars.githubusercontent.com/u/43142209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luiz00martins", "html_url": "https://github.com/luiz00martins", "followers_url": "https://api.github.com/users/luiz00martins/followers", "following_url": "https://api.github.com/users/luiz00martins/following{/other_user}", "gists_url": "https://api.github.com/users/luiz00martins/gists{/gist_id}", "starred_url": "https://api.github.com/users/luiz00martins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luiz00martins/subscriptions", "organizations_url": "https://api.github.com/users/luiz00martins/orgs", "repos_url": "https://api.github.com/users/luiz00martins/repos", "events_url": "https://api.github.com/users/luiz00martins/events{/privacy}", "received_events_url": "https://api.github.com/users/luiz00martins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5272676243, "node_id": "LA_kwDOJKSTjM8AAAABOkankw", "url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 5381931159, "node_id": "LA_kwDOJKSTjM8AAAABQMnAlw", "url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/labels/needs%20discussion", "name": "needs discussion", "color": "0e8a16", "default": false, "description": "To be discussed among maintainers"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2023-04-06T01:39:06Z", "updated_at": "2023-04-18T10:22:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I've encountered the same problem as #101. GPT Thinks that `evaluate_code` will execute python:\r\n```\r\nCODEREVIEW-GPT THOUGHTS: Let's find some code to review and suggest improvements.\r\nREASONING: We need to search for files with common code extensions that are not too large and more recent than a certain date.\r\nPLAN:\r\n-  Use the 'evaluate_code' command to run a Python script that searches for files with common code extensions in the current folder and subfolders.\r\n-  Use the 'memory_add' command to save the file paths for later reference and reuse.\r\n-  Review the saved files using 'read_file' command to ensure they are indeed code files.\r\n-  Choose a file to review and suggest improvements.\r\nCRITICISM: We may need to adjust the search criteria if we don't find relevant code or if too many files match the criteria.\r\nNEXT ACTION:  COMMAND = evaluate_code ARGUMENTS = {'code': 'import pathlib\\nfrom typing import List\\n\\ndef find_code_files(root: str, extensions: List[str], max_size: int, min_date_modified: float) -> List[str]:\\n \"\"\"\\n Returns a list of file paths for code files with the specified extensions, maximum size, and minimum date modified\\n rooted in the given directory and its subdirectories.\\n \"\"\"\\n files = [str(path) for path in pathlib.Path(root).rglob(\"*\") if path.suffix in extensions\\n and path.stat().st_size <= max_size\\n and path.stat().st_mtime >= min_date_modified]\\n return files\\n\\ndef print_files(files: List[str])\r\n -> None:\\n \"\"\"\\n Prints the list of file paths to the console, one file per line.\\n If no relevant files are found, prints a message indicating so.\\n \"\"\"\\n for file in files:\\n print(file)\\n else:\\n print(\"No\r\n relevant files found.\")\\n\\n\\ndef analyze_code(code: str) -> None:\\n \"\"\"\\n Analyzes the given code and provides suggestions for improvements.\\n \"\"\"\\n pass\\n\\nif __name__ == \\'__main__\\':\\n root: str = \\'.\\'\\n extensions: List[str] = [\\'.py\\', \\'.js\\', \\'.java\\']\\n max_size: int = 10000 # bytes\\n min_date_modified: float = 1609459200 # seconds since epoch (01/01/2021)\\n\\n files: List[str] = find_code_files(root, extensions, max_size, min_date_modified)\\n print_files(files)\\n'}\r\n```\r\n\r\nOn one hand, that's a bug, which is addressed on #101.\r\n\r\nOn the other hand... that's a very interesting idea from GPT. Perhaps giving it the ability to execute python code could allow it to execute a lot of tasks in a way more dynamic way.", "reactions": {"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/286/timeline", "performed_via_github_app": null, "state_reason": "reopened"}