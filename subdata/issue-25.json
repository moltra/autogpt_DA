{"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/3686", "repository_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT", "labels_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/3686/labels{/name}", "comments_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/3686/comments", "events_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/3686/events", "html_url": "https://github.com/Significant-Gravitas/Auto-GPT/issues/3686", "id": 1692339322, "node_id": "I_kwDOJKSTjM5k3wx6", "number": 3686, "title": "Add plugins/commands for common I/O operations and train GPT with n-shots to use them", "user": {"login": "Emasoft", "id": 713559, "node_id": "MDQ6VXNlcjcxMzU1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/713559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emasoft", "html_url": "https://github.com/Emasoft", "followers_url": "https://api.github.com/users/Emasoft/followers", "following_url": "https://api.github.com/users/Emasoft/following{/other_user}", "gists_url": "https://api.github.com/users/Emasoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emasoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emasoft/subscriptions", "organizations_url": "https://api.github.com/users/Emasoft/orgs", "repos_url": "https://api.github.com/users/Emasoft/repos", "events_url": "https://api.github.com/users/Emasoft/events{/privacy}", "received_events_url": "https://api.github.com/users/Emasoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-05-02T12:32:50Z", "updated_at": "2023-05-02T20:35:46Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Duplicates\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Summary \ud83d\udca1\r\n\r\nGPT-3 or 4 often tries to code Python scripts to do basic I/O operations, because it has no choice. We didn't provide it with the basic and most common commands to handle I/O operations on documents. So it can only resort to writing the functions by itself in Python. \r\nThe proposed solution is the following:\r\n  \r\n1) **Give Auto-GPT a set of high level (crossplatform abstractions) plugins/commands (it would be better if those were converted to plugins) to solve these simple but common I/O tasks:**  \r\n  \r\n - [ ] Get System Informations (free disk space, free mem, hw info, operating system, language, file system, allowed chars in file system, max file size, current ip, remote host, user privileges, Python version, installed Python libs, shell, working dirs, dot files, gitconfig, etc.)\r\n - [ ] Read a Document (type: txt, rtf, doc, epub, markdown, csv, tsv, json, jsonl, yaml, chatML, excel, powerpoint, pdf, html, xhtml, svg, css, xml, js, py...)\r\n - [ ] Write a New Document (type: txt, rtf, doc, epub, markdown, csv, tsv, json, jsonl, chatML, yaml, excel, powerpoint, pdf, html, xhtml, svg, xml, js, py...)\r\n - [ ] Append/Prepend Text or Data to Existing Document\r\n - [ ] Search and Replace Text/Data inside Existing Document\r\n - [ ] Edit/Modify/Improve/Summarize/Refactor a Document according to given Rules\r\n - [ ] Count chars/words/lines/bytes of Document content\r\n - [ ] Join Two or More Documents in the given Order\r\n - [ ] Split a Document in Two or More Documents at the given lines/chars/pages\r\n - [ ] Search inside existing Document\r\n - [ ] Compress Files/Folders in Zip/Rar/Tar/gz Archive\r\n - [ ] Unpack Zip/Rar/Tar/gz Archive File to Folder\r\n - [ ] Check Zip/Rar/Tar/gz file integrity\r\n - [ ] Index a Document for Similarity Search (or Embed a vector tokenization of it) \r\n - [ ] Compute tokenization costs of Text/Document/Prompt/n-shot training\r\n - [ ] Extract/Scrape Document from URL\r\n - [ ] Extract/Scrape Data from URL\r\n - [ ] Download web assets from a website\r\n - [ ] Upload web assets to a website\r\n - [ ] Hash remote/local file and store hash signature\r\n - [ ] Check remote/local file integrity via Hash signature\r\n - [ ] Render markdown to HTML, DOCX or PDF file\r\n - [ ] Save table to excel file or csv/tsv or json/yaml\r\n - [ ] Load table data from excel file, markdown, csv/tsv or json/yaml\r\n - [ ] Generate n-shot training conversation in chatML format from training data \r\n - [ ] Load Audio File and convert to Text\r\n - [ ] Save generated Audio file from Text\r\n - [ ] Join Audio Files with ffmpeg\r\n - [ ] Split Audio Files with ffmpeg\r\n - [ ] Join Video Files with ffmpeg\r\n - [ ] Split Video Files with ffmpeg\r\n - [ ] Extract and Save Audio track from Video file with ffmpeg\r\n - [ ] Read document metadata (Creation date, Last updated, Last Access, Permissions, ID3 for MP3, Atom for MP4, Audiobooks, manifest for .ePub, etc.)\r\n - [ ] Write document metadata (Permissions, ID3 for MP3, Atom for MP4, Audiobooks, manifest for .ePub, etc.)\r\n - [ ] Change document metadata\r\n - [ ] Duplicate documents\r\n - [ ] Tag document with keyword\r\n - [ ] Find documents by tag\r\n - [ ] Rename file/folder\r\n - [ ] Batch renaming of files/folders\r\n - [ ] Delete document(s)\r\n - [ ] Archive/backup document\r\n - [ ] Restore document from backup/archive\r\n - [ ] Download files from url\r\n - [ ] Upload files to url\r\n - [ ] Create ssh keypair for remote host\r\n - [ ] Change ssh keypair for remote host\r\n - [ ] Backup ssh keypair for remote host \r\n - [ ] Upload web assets to remote host via ssh  \r\n - [ ] Add document to local Git versioning  \r\n - [ ] Commit/push modified document to local Git\r\n - [ ] Save GPT auto generated change log of modified document\r\n - [ ] Generate diffs of document compared to previous version in Git\r\n - [ ] Revert to previous version of Document using Git  \r\n - [ ] Resume Last I/O Task state if interrupted (all I/O tasks should autoresume after a blackout or crash)\r\n\r\n 2) **The current commands available to Auto-GPT should also be converted in plugins:**  \r\n\r\n - [ ] command_registry.import_commands(\"autogpt.commands.analyze_code\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.audio_text\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.execute_code\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.file_operations\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.git_operations\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.google_search\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.image_gen\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.improve_code\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.twitter\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.web_selenium\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.write_tests\")\r\n - [ ] command_registry.import_commands(\"autogpt.app\")\r\n\r\nWe also need to create some specific n-shot training files (chatML, jsonl) for each of the above to let GPT learn how to use them correctly (like for GPT-4 plugins).\r\n\r\n3) **Create N-Shot training files (ChatML, jsonl) for the above plugins:**  \r\n\r\n- [ ] Get System Informations (free disk space, free mem, hw info, operating system, language, file system, allowed chars in file system, max file size, current ip, remote host, user privileges, Python version, installed Python libs, shell, working dirs, dot files, gitconfig, etc.)\r\n - [ ] Read a Document (type: txt, rtf, doc, epub, markdown, csv, tsv, json, jsonl, yaml, chatML, excel, powerpoint, pdf, html, xhtml, svg, css, xml, js, py...)\r\n - [ ] Write a New Document (type: txt, rtf, doc, epub, markdown, csv, tsv, json, jsonl, chatML, yaml, excel, powerpoint, pdf, html, xhtml, svg, xml, js, py...)\r\n - [ ] Append/Prepend Text or Data to Existing Document\r\n - [ ] Search and Replace Text/Data inside Existing Document\r\n - [ ] Edit/Modify/Improve/Summarize/Refactor a Document according to given Rules\r\n - [ ] Count chars/words/lines/bytes of Document content\r\n - [ ] Join Two or More Documents in the given Order\r\n - [ ] Split a Document in Two or More Documents at the given lines/chars/pages\r\n - [ ] Search inside existing Document\r\n - [ ] Compress Files/Folders in Zip/Rar/Tar/gz Archive\r\n - [ ] Unpack Zip/Rar/Tar/gz Archive File to Folder\r\n - [ ] Check Zip/Rar/Tar/gz file integrity\r\n - [ ] Index a Document for Similarity Search (or Embed a vector tokenization of it) \r\n - [ ] Compute tokenization costs of Text/Document/Prompt/n-shot training\r\n - [ ] Extract/Scrape Document from URL\r\n - [ ] Extract/Scrape Data from URL\r\n - [ ] Download web assets from a website\r\n - [ ] Upload web assets to a website\r\n - [ ] Hash remote/local file and store hash signature\r\n - [ ] Check remote/local file integrity via Hash signature\r\n - [ ] Render markdown to HTML, DOCX or PDF file\r\n - [ ] Save table to excel file or csv/tsv or json/yaml\r\n - [ ] Load table data from excel file, markdown, csv/tsv or json/yaml\r\n - [ ] Generate n-shot training conversation in chatML format from training data \r\n - [ ] Load Audio File and convert to Text\r\n - [ ] Save generated Audio file from Text\r\n - [ ] Join Audio Files with ffmpeg\r\n - [ ] Split Audio Files with ffmpeg\r\n - [ ] Join Video Files with ffmpeg\r\n - [ ] Split Video Files with ffmpeg\r\n - [ ] Extract and Save Audio track from Video file with ffmpeg\r\n - [ ] Read document metadata (Creation date, Last updated, Last Access, Permissions, ID3 for MP3, Atom for MP4, Audiobooks, manifest for .ePub, etc.)\r\n - [ ] Write document metadata (Permissions, ID3 for MP3, Atom for MP4, Audiobooks, manifest for .ePub, etc.)\r\n - [ ] Change document metadata\r\n - [ ] Duplicate documents\r\n - [ ] Tag document with keyword\r\n - [ ] Find documents by tag\r\n - [ ] Rename file/folder\r\n - [ ] Batch renaming of files/folders\r\n - [ ] Delete document(s)\r\n - [ ] Archive/backup document\r\n - [ ] Restore document from backup/archive\r\n - [ ] Download files from url\r\n - [ ] Upload files to url\r\n - [ ] Create ssh keypair for remote host\r\n - [ ] Change ssh keypair for remote host\r\n - [ ] Backup ssh keypair for remote host \r\n - [ ] Upload web assets to remote host via ssh  \r\n - [ ] Add document to local Git versioning  \r\n - [ ] Commit/push modified document to local Git\r\n - [ ] Save GPT auto generated change log of modified document\r\n - [ ] Generate diffs of document compared to previous version in Git\r\n - [ ] Revert to previous version of Document using Git  \r\n - [ ] Resume Last I/O Task state if interrupted (all I/O tasks should autoresume after a blackout or crash)\r\n - [ ] command_registry.import_commands(\"autogpt.commands.analyze_code\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.audio_text\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.execute_code\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.file_operations\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.git_operations\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.google_search\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.image_gen\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.improve_code\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.twitter\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.web_selenium\")\r\n - [ ] command_registry.import_commands(\"autogpt.commands.write_tests\")\r\n - [ ] command_registry.import_commands(\"autogpt.app\")\r\n\r\n\r\n\r\n### Examples \ud83c\udf08\r\n\r\nSee also issue https://github.com/Significant-Gravitas/Auto-GPT/issues/3445\r\n\r\n### Motivation \ud83d\udd26\r\n\r\nGPT-3 or 4 often tries to code Python scripts to do basic I/O operations, because it has no choice. We didn't provide it with the basic and most common commands to handle I/O operations on documents. So it can only resort to writing the functions by itself in Python.  What we need to do is to give Auto-GPT a set of plugins/commands (it would be better if those were converted to plugins) to solve these simple but common I/O tasks.", "reactions": {"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/3686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/3686/timeline", "performed_via_github_app": null, "state_reason": null}