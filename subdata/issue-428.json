{"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1674", "repository_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT", "labels_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1674/labels{/name}", "comments_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1674/comments", "events_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1674/events", "html_url": "https://github.com/Significant-Gravitas/Auto-GPT/issues/1674", "id": 1669529536, "node_id": "I_kwDOJKSTjM5jgv_A", "number": 1674, "title": "Discussion: Streamlining Auto-GPT Configuration with YAML \ud83d\udcdd", "user": {"login": "lekapsy", "id": 117356974, "node_id": "U_kgDOBv65rg", "avatar_url": "https://avatars.githubusercontent.com/u/117356974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lekapsy", "html_url": "https://github.com/lekapsy", "followers_url": "https://api.github.com/users/lekapsy/followers", "following_url": "https://api.github.com/users/lekapsy/following{/other_user}", "gists_url": "https://api.github.com/users/lekapsy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lekapsy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lekapsy/subscriptions", "organizations_url": "https://api.github.com/users/lekapsy/orgs", "repos_url": "https://api.github.com/users/lekapsy/repos", "events_url": "https://api.github.com/users/lekapsy/events{/privacy}", "received_events_url": "https://api.github.com/users/lekapsy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5272676243, "node_id": "LA_kwDOJKSTjM8AAAABOkankw", "url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 5272676246, "node_id": "LA_kwDOJKSTjM8AAAABOkanlg", "url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}, {"id": 5381931159, "node_id": "LA_kwDOJKSTjM8AAAABQMnAlw", "url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/labels/needs%20discussion", "name": "needs discussion", "color": "0e8a16", "default": false, "description": "To be discussed among maintainers"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-04-15T18:40:07Z", "updated_at": "2023-04-30T07:09:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Duplicates\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Summary \ud83d\udca1\r\n\r\nHi all :)\r\n\r\nI have a suggestion that could improve the Auto-GPT project. As we continue to add new configuration options, it's becoming difficult to keep track of everything. So, I thought it might be helpful if we consider switching from using .env files to YAML for our configuration. (keep api keys etc in .env still)\r\n\r\nThe advantages of using yaml include clearer and more structured configuration, which makes it easier for everyone to understand and maintain the configuration files. Additionally, splitting the configuration into multiple files can help with organization and version control, making maintenance and troubleshooting much easier.\r\n\r\nIn my opinion, as much as possible should be set in a config.yaml file to make it easier to maintain and modify in the future. There are several places where commands/options/values are hardcoded, making it impossible to \"opt\" out. To make Auto-GPT more flexible and customizable, we should consider making it easy to change, tweak, and play around with how it interacts with different LLMs in the future.\r\n\r\nAs I have no real developer experience other that writing scripts as a sysadmin I might be overlooking something obvious or it would be better to just store the configuration with the memory providers that gets loaded on initialization and then changed in a webui etc, but for it's simplicity I think that moving to yaml and standardizing the naming scheme would make a big difference.\r\n\r\nHowever, before I start to make any changes and do an overhaul, I would like to hear everyone's thoughts on the idea and any potential drawbacks Please let me know your opinions so that I can decide if it's a worthwhile improvement.\r\n\r\nThanks!\r\n/Kapsy\r\n\r\n### Examples \ud83c\udf08\r\n\r\nAn example would be to change how autogpt/prompt.py handles commands, as today there is no option to change this prompt, adding a \"enabled\" toggle and also load the config from a prompt.yaml or config.yaml would make it easy to just drop one in and change the way it loaded to ignore / build depending on the options in the commands: structure.\r\n\r\n```yaml\r\n\r\ncommands:\r\n  \"Google Search\":\r\n    name: google\r\n    input: \"<search>\"\r\n    enabled: false\r\n  \"Browse Website\":\r\n    name: browse_website\r\n    url: \"<url>\"\r\n    question: \"<what_you_want_to_find_on_website>\"\r\n    enabled: false\r\n    \r\n```\r\n\r\nWhen it comes to the main .env file in use now, I see it getting bloated the more external services become available (Local LLM's, TTS / TTI providers etc) where we can easily pull / change settings that is for something general like image generation as a whole, or just for a specific provider.\r\n\r\n```yaml\r\nsynthesis:\r\n  image:\r\n    general:\r\n      enabled: True\r\n    tti:\r\n      provider:\r\n        openai:\r\n          model: dalle  # Image provider (Example: dalle)\r\n          enabled: true\r\n        huggingface:\r\n          model: sd2nextgen\r\n          enabled: false\r\n  audio:\r\n    general:\r\n      enabled: True\r\n    tts:\r\n      provider:\r\n        local:\r\n          macos: false\r\n          windows: false\r\n        streamelements:\r\n          model: brian\r\n          enabled: false\r\n        elevenlabs:\r\n          model: xyz\r\n          voice:\r\n           id1: 1010102\r\n           id2: 1010101\r\n         enabled: true\r\n```\r\n\r\nOr for search something like this:\r\n\r\n\r\n``` yaml\r\n\r\ndiscovery:\r\n  search:\r\n    general:\r\n      enabled: True\r\n    google:\r\n      CUSTOM_SEARCH_ENGINE_ID: your-custom-search-engine-id  # Custom search engine ID (Example: my-custom-search-engine-id)\r\n\r\n         \r\n``` \r\n\r\n\r\n### Motivation \ud83d\udd26\r\n\r\nIt would be easy to get all data for a specific function that has settings. This is just a quick example:\r\n\r\n```python\r\n\r\nimport yaml\r\n\r\ndef get_synthesis(yaml_file):\r\n    \"\"\"\r\n    Given a YAML file with synthesis settings, returns a dictionary with\r\n    information about the enabled image and/or audio synthesis provider(s).\r\n    \"\"\"\r\n    with open(yaml_file, \"r\") as f:\r\n        config = yaml.safe_load(f)\r\n\r\n    synthesis_data = {}\r\n\r\n    if synthesis := config.get(\"synthesis\"):\r\n        image_enabled = synthesis.get(\"image\", {}).get(\"general\", {}).get(\"enabled\", False)\r\n        audio_enabled = synthesis.get(\"audio\", {}).get(\"general\", {}).get(\"enabled\", False)\r\n\r\n        if image_enabled:\r\n            providers = synthesis[\"image\"][\"tti\"][\"provider\"]\r\n            enabled_providers = [p for p, s in providers.items() if s.get(\"enabled\", False)]\r\n            if len(enabled_providers) != 1:\r\n                raise ValueError(\"One enabled image provider should be specified\")\r\n            image_provider, image_data = enabled_providers[0], providers[enabled_providers[0]]\r\n            synthesis_data[\"image\"] = {\"provider\": image_provider, \"data\": image_data}\r\n\r\n        if audio_enabled:\r\n            providers = synthesis[\"audio\"][\"tts\"][\"provider\"]\r\n            enabled_providers = [p for p, s in providers.items() if s.get(\"enabled\", False)]\r\n            if len(enabled_providers) != 1:\r\n                raise ValueError(\"One enabled audio provider should be specified\")\r\n            audio_provider, audio_data = enabled_providers[0], providers[enabled_providers[0]]\r\n            synthesis_data[\"audio\"] = {\"provider\": audio_provider, \"data\": audio_data}\r\n\r\n    if len(synthesis_data) > 1:\r\n        providers = list(synthesis_data.keys())\r\n        raise ValueError(f\"Only one synthesis section should be enabled. Found {providers}\")\r\n\r\n    return synthesis_data\r\n\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1674/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Significant-Gravitas/Auto-GPT/issues/1674/timeline", "performed_via_github_app": null, "state_reason": null}